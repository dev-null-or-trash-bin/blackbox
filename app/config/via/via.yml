via_core:

parameters:
    locales: [de, en]

doctrine:
    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: false
#        mappings:
#            gedmo_translatable:
#                type: annotation
#                prefix: Gedmo\Translatable\Entity
#                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
#                alias: GedmoTranslatable # this one is optional and will default to the name set for the mapping
#                is_bundle: false
#            gedmo_translator:
#                type: annotation
#                prefix: Gedmo\Translator\Entity
#                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translator/Entity"
#                alias: GedmoTranslator # this one is optional and will default to the name set for the mapping
#                is_bundle: false
#            gedmo_loggable:
#                type: annotation
#                prefix: Gedmo\Loggable\Entity
#                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
#                alias: GedmoLoggable # this one is optional and will default to the name set for the mapping
#                is_bundle: false
        filters:
            softdeleteable:
                class: Gedmo\SoftDeleteable\Filter\SoftDeleteableFilter
                enabled: false

#stof_doctrine_extensions:
#    default_locale: %locale%
#    uploadable:
#        default_file_path:       %kernel.root_dir%/../web/uploads

        # Mime type guesser class: Optional. By default, we provide an adapter for the one present in the HttpFoundation component of Symfony
#        mime_type_guesser_class: Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter

        # Default file info class implementing FileInfoInterface: Optional. By default we provide a class which is prepared to receive an UploadedFile instance.
#        default_file_info_class: Stof\DoctrineExtensionsBundle\Uploadable\UploadedFileInfo
#    orm:
#        default:
#            tree: true
#            sluggable: true
#            timestampable: true
#            softdeleteable: false
#            loggable: false
#            translatable: false

services:
    # KernelRequest listener
#    extension.listener:
#        class: Via\Bundle\CoreBundle\Listener\DoctrineExtensionListener
#        calls:
#            - [ setContainer, [ @service_container ] ]
#        tags:
            # translatable sets locale after router processing
#            - { name: kernel.event_listener, event: kernel.request, method: onLateKernelRequest, priority: -10 }
            # loggable hooks user username if one is in security context
#            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }


    # Doctrine Extension listeners to handle behaviors
    gedmo.listener.tree:
        class: Gedmo\Tree\TreeListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ '@annotation_reader' ] ]

#    gedmo.listener.translatable:
#        class: Gedmo\Translatable\TranslatableListener
#        tags:
#            - { name: doctrine.event_subscriber, connection: default }
#        calls:
#            - [ setAnnotationReader, [ @annotation_reader ] ]
#            - [ setTranslatableLocale, [ %locale% ] ]
            #- [ setFallbackLocales, [ %locales% ] ] #wip.2.4.0
#            - [ setTranslationFallback, [ true ] ]

    gedmo.listener.timestampable:
        class: Gedmo\Timestampable\TimestampableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ '@annotation_reader' ] ]

    gedmo.listener.sluggable:
        class: Gedmo\Sluggable\SluggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ '@annotation_reader' ] ]

    gedmo.listener.sortable:
        class: Gedmo\Sortable\SortableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ '@annotation_reader' ] ]

#    gedmo.listener.loggable:
#        class: Gedmo\Loggable\LoggableListener
#        tags:
#            - { name: doctrine.event_subscriber, connection: default }
#        calls:
#            - [ setAnnotationReader, [ @annotation_reader ] ]

#services:
#    form.type.translatable:
#        class: Via\Bundle\CoreBundle\Form\TranslatedFieldType
#        arguments: [ @service_container ]
#        tags:
#        - { name: form.type, alias: translatable_field }

#a2lix_translation_form:
#    locales: %locales%     # [1]
#    default_required: true      # [2]
#    manager_registry: doctrine      # [3]
#    templating: "A2lixTranslationFormBundle::default.html.twig"      # [4]

sonata_formatter:
    formatters:
        markdown:
            service: sonata.formatter.text.markdown
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig #keep this commented unless you are using media bundle.


        text:
            service: sonata.formatter.text.text
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        rawhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        richhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        twig:
            service: sonata.formatter.text.twigengine
            extensions: [] # Twig formatter cannot have extensions

twig:
  form:
        resources:
            # ...
            - 'SonataFormatterBundle:Form:formatter.html.twig'
            
sonata_admin:
    templates:
        # default global templates
        layout:  'ViaProductBundle::standard_layout.html.twig'